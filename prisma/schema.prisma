generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

enum Tecnologias {
  Frontend
  Backend
}

model User {
  id            String       @id @default(uuid())
  name          String
  email         String       @unique
  emailVerified DateTime?
  password      String
  role          Role         @default(user)
  image         String?
  conferencias  Conferencia[] @relation("UserConferencias")
  reservas      Reserva[]     // Relación con reservas
}

model Programadores {
  id         String      @id @default(uuid())
  name       String
  foto       String
  tecnologia Tecnologias

  @@index([tecnologia])
}

model FotosConferencia {
  id   String @id @default(uuid())
  name String
  foto String
}

model Conferencia {
  id         Int       @id @default(autoincrement())
  titulo     String
  texto      String
  fecha      DateTime
  entradas   Int       @default(10000)
  reservado  Boolean   @default(false) // Campo para indicar si la conferencia está reservada
  userId     String?   // Campo para la relación inversa con User

  // Relación inversa a User
  user       User?     @relation(fields: [userId], references: [id], name: "UserConferencias")

  reservas   Reserva[] // Relación con reservas

  @@index([fecha])
}

model Reserva {
  id            Int         @id @default(autoincrement())
  userId        String
  conferenciaId Int
  createdAt     DateTime    @default(now())
  
  user          User        @relation(fields: [userId], references: [id])
  conferencia   Conferencia @relation(fields: [conferenciaId], references: [id])

  @@unique([userId, conferenciaId])
}
